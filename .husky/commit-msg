#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

CURRENT_BRANCH_NAME=$(git symbolic-ref --short HEAD)

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(awk '!/^\s*#/' "$COMMIT_MSG_FILE")
SECOND_LINE=$(echo "$COMMIT_MSG" | sed -n '2p')

IS_HEADER_LENGTH_UNDER_50='^(.{1,50}$)'
IS_INCLUDE_A_TYPE='(\[Daily]|\[Meeting])'
IS_LEVEL_VALID='( \/ )((level [1-5])|(Unrated)|(Bronze)|(Silver)|(Gold)|(Platinum)|(Diamond)|(Ruby))'

# --- 초기 예외처리 ---
if [[ $CURRENT_BRANCH_NAME == "main" ]] || [[ $COMMIT_MSG =~ Merge ]] || [[ $COMMIT_MSG =~ \[Fix\] ]]; then
    exit 0
elif [[ $COMMIT_MSG =~ (\[Meeting\] Update (README|Readme)) ]]; then
    exit 0
fi

if [[ "$CURRENT_BRANCH_NAME" =~ meeting ]] && [[ ! $COMMIT_MSG =~ \[Meeting\] ]]; then
    echo "🚨 /meeting branch에서는 [Meeting] type 으로 작성해주세요."
    echo "$CURRENT_BRANCH_NAME"
    echo "$COMMIT_MSG"
    exit 1
fi

# --- header ---
if ! grep -qP "$IS_HEADER_LENGTH_UNDER_50" "$COMMIT_MSG_FILE"; then
    echo "🚨 Header는 50자를 넘을 수 없어요."
    echo "$COMMIT_MSG"
    echo "$SECOND_LINE"
    exit 1
fi

if ! grep -qP "$IS_INCLUDE_A_TYPE" "$COMMIT_MSG_FILE"; then
    echo "🚨 Commit Type은 [Daily] 또는 [Meeting] 중 하나여야 해요."
    echo "$COMMIT_MSG"
    echo "$SECOND_LINE"
    exit 1
fi

if ! grep -qP "$IS_LEVEL_VALID" "$COMMIT_MSG_FILE"; then
    echo "🚨 / level (1|2|3|4|5) 형식으로 입력 해 주세요. (띄어쓰기도 포함이에요!)"
    echo "$COMMIT_MSG"
    echo "$SECOND_LINE"
    exit 1
fi

# --- description ---
if ! [ -z "$SECOND_LINE" ]; then
  echo "🚨 두 번째 줄은 비워둬야 해요."
  echo "$COMMIT_MSG"
  exit 1
fi

